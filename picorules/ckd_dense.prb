/* Optimized Rule block for cube generation in CKD*/

#define_ruleblock(ckd_dense,
    {
        description: "Optimized Rule block for cube generation in CKD",
        is_active:0,


    }
);

dob => eadv.dmg_dob.dt.max();

dod => eadv.dmg_dod.dt.max();

alive : { dod < sysdate-365 => 0},{ => 1};

gender => eadv.dmg_gender.val.last();

loc_mode_phc => eadv.dmg_location.val.stats_mode().where(substr(val,-1)=1);

loc_mode => eadv.dmg_location.val.stats_mode().where(dt > sysdate - 730);

source => eadv.dmg_source.val.last();




hd_z49_n => eadv.icd_z49_1.dt.count(0);

hd_z49_1y_n => eadv.icd_z49_1.dt.count(0).where(dt>sysdate-365);

hd_dt => eadv.icd_z49_1.dt.max(1900);

hd_dt_min => eadv.icd_z49_1.dt.min();


pd_dt => eadv.[caresys_1310006,caresys_1310007,caresys_1310008,icpc_u59007,icpc_u59009,icd_z49_2].dt.max(1900);

tx_dt => eadv.[icpc_u28001,icd_z94%].dt.max(1900);

homedx_dt => eadv.[icpc_u59j99].dt.max(1900);


ren_enc => eadv.[enc_op_ren_%].dt.max(1900);

rrt_ex_flag : { alive=0 =>1},{=>0};

rrt:{hd_dt > greatest(pd_dt,tx_dt,homedx_dt) and hd_z49_1y_n>10  and hd_dt>sysdate-365  and rrt_ex_flag=0 => 1},
    {pd_dt > greatest(hd_dt,tx_dt,homedx_dt) and rrt_ex_flag=0 => 2},
    {tx_dt > greatest(hd_dt,pd_dt,homedx_dt) and rrt_ex_flag=0 => 3},
    {homedx_dt > greatest(hd_dt,pd_dt,tx_dt) and rrt_ex_flag=0 => 4},
    {=>0};


pd_dt_min => eadv.[caresys_1310006,caresys_1310007,caresys_1310008,icpc_u59007,icpc_u59009,icd_z49_2].dt.min();


hd_incd : {hd_dt_min > sysdate-365 and hd_z49_n>=10 => 1},{=>0};

pd_incd : {pd_dt_min > sysdate-365 => 1},{=>0};

rrt_incd : { hd_incd=1 or pd_incd=1 => 1},{=>0};

#doc(,
    {
        txt : "CKD staging based KDIGO 2012"
    }
);

#doc(,
    {
        txt : "Exclusions"
    }
);

ckd_ex_flag : { rrt>0 or alive=0 =>1},{=>0};

#doc(,
    {
        txt : "Read last,first, -30 day and -365 day egfr values"
    }
);

egfr_l => eadv.lab_bld_egfr_c.val.lastdv().where(dt > sysdate - 365);

egfr_l1 => eadv.lab_bld_egfr_c.val.lastdv().where(dt < egfr_l_dt-90 and dt>egfr_l_dt-365);

egfr_l2 => eadv.lab_bld_egfr_c.val.lastdv().where(dt < egfr_l_dt-365);

egfr_f => eadv.lab_bld_egfr_c.val.firstdv();


#doc(,
    {
        txt : "Check for 30 day egfr assumption violation"
    }
);

egfr_30_n2 => eadv.lab_bld_egfr_c.val.count(0).where(dt>egfr_l_dt-30);
egfr_30_mu => eadv.lab_bld_egfr_c.val.avg().where(dt>egfr_l_dt-30);

egfr_30_qt : {egfr_30_n2>=2 => round(egfr_l_val/egfr_30_mu,2)};

asm_viol_30 : {nvl(egfr_30_qt,1)>1.2 or nvl(egfr_30_qt,1)<0.8  => 1},{=> 0};

asm_viol_ex : {asm_viol_30=1 =>0},{=>1};

#doc(,
    {
        txt : "Check for 90 day egfr persistence"
    }
);


g_pers : { egfr_l1_val<90 and egfr_l_val<60 => 1},{ egfr_l2_val<90 and egfr_l_val<60 =>1},{=>0};


#doc(,
    {
        txt : "Check for 1y egfr progression"
    }
);

ckd_prog : { egfr_l2_val!? =>1},{=>0};

l_l2_delta : { egfr_l2_val!? => egfr_l_val-egfr_l2_val};

g_stage_prog : {l_l2_delta < -15 =>1},{=>0};

#doc(,
    {
        txt : "Check for 30 day uacr persistence"
    }
);

acr_l => eadv.lab_ua_acr.val.lastdv().where(dt > sysdate - 365);

acr_l1 => eadv.lab_ua_acr.val.lastdv().where(dt < acr_l_dt-30 and dt > sysdate - 730);

a_pers : {acr_l_val>3 and acr_l1_val>3 => 1},{=>0};

ckd_pers : {greatest(g_pers,a_pers)>0 => 1},{=>0};

g_l_val:  {egfr_l_val>=90  => 1},
        {egfr_l_val<90 AND egfr_l_val>=60  AND rrt=0 => 2},
        {egfr_l_val<60 AND egfr_l_val>=45  AND rrt=0 => 3},
        {egfr_l_val<45 AND egfr_l_val>=30  AND rrt=0 => 4},
        {egfr_l_val<30 AND egfr_l_val>=15  AND rrt=0 => 5},
        {egfr_l_val<15 AND rrt=0 => 6},
        {=>0};


a_l_val: {acr_l_val<3 => 1},
        {acr_l_val<30 AND acr_l_val>=3 => 2},
        {acr_l_val<300 AND acr_l_val>=30 => 3},
        {acr_l_val>300 => 4},{=>0};



avf => eadv.caresys_3450901.dt.max();

ckd :{g_l_val=1 and a_l_val>1 and ckd_ex_flag=0=> 1},
        {g_l_val=2 and a_l_val>1 and ckd_ex_flag=0 => 2},
        {g_l_val>2 and ckd_ex_flag=0 => g_l_val},
        {=> 0};

dx_ckd0_  => eadv.[icpc_u99035,icpc_u99036,icpc_u99037,icpc_u99043,icpc_u99044,icpc_u99038,icpc_u99039,icpc_u88j91,icpc_u88j92,icpc_u88j93,icpc_u88j94,icpc_u88j95,icpc_u88j96].val.last();

dx_ckd : { 1=1 => nvl(dx_ckd0_,0)};

dx_ckd_diff :{abs(ckd-dx_ckd)>=2 => 1 },{=>0};





assert_level : {. => 100000 + ckd_pers*10000 + asm_viol_ex*1000 + ckd_prog*100};

ckd_dense : { . => 1};