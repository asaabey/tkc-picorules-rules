 /* Rule block to assess for secondary hyperparathyroidism */

 #define_ruleblock(ckd_shpt,
     {
         description: "Rule block to assess for secondary hyperparathyroidism",
         is_active:2,

     }
 );

ckd => rout_ckd.ckd_stage_val.val.bind();

rrt => rout_rrt.rrt.val.bind();

esrd : {rrt in (1,2,4)=>1},{=>0};


calcium1 => eadv.lab_bld_calcium_corrected._.lastdv().where(dt>sysdate-60);
calcium2 => eadv.lab_bld_calcium_corrected._.lastdv(1).where(dt>sysdate-60);


ca_n_30d => eadv.lab_bld_calcium_corrected.dt.count().where(dt>sysdate-30);

magnesium1 => eadv.lab_bld_magnesium.val.lastdv().where(dt>sysdate-60);

phos1 => eadv.lab_bld_phosphate._.lastdv().where(dt>sysdate-60);
phos2 => eadv.lab_bld_phosphate._.lastdv(1).where(dt>sysdate-60);


pth1 => eadv.lab_bld_pth._.lastdv().where(dt>sysdate-120);
pth2 => eadv.lab_bld_pth._.lastdv(1).where(dt>sysdate-120 and dt< pth1_dt-30);


pth_qt: { coalesce(pth2_val,0)>0 and coalesce(pth1_val,0)>0 => round(pth2_val - pth1_val/pth2_val,2)};

cinacalcet_ld => eadv.rxnc_hb05bx.dt.last().where(val=1);


calcitriol_ld => eadv.rxnc_a11cc.dt.last().where(val=1);

phos_bind_ld => eadv.rxnc_v03ae.dt.last().where(val=1);


ckd_shpt : { (rrt in(1,2,4) or ckd>4) and pth1_val!? => 1 },{=>0};